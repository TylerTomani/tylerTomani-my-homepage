<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>timer-chromeExtension</title>
    <link rel="stylesheet" href="../../../css/colors.css">    
    <link rel="stylesheet" href="../../../css/copy-code.css">    
    <link rel="stylesheet" href="../../../css/font-sizes.css">    
    <link rel="stylesheet" href="../../../css/resource-header-temp.css">
    <link rel="stylesheet" href="css/imgAnimate-v2.css">
    <link rel="stylesheet" href="css/steps-main-temp.css">
    <link rel="stylesheet" href="css/chatGpt-questions.css"/>
    <script type="module" src="../../../documentation/js/img-enlarge-v1.js" defer></script>
    <script type="module" src="../../../documentation/js/play-enlarge-video.js" defer></script>
    <script type="module" src="../../../documentation/js/addRemoveTabs-v1.js" defer></script>
    <script module src="js/chatGpt-drop-topics.js" defer></script>
    <script module src="../../../js/letterFocus-lesson-template.js" defer></script>
    <script src="../../../documentation/js/dropPartStepFocus-v2.js" defer></script>
    <script  src="../../../js/copy-code.js" defer></script>
</head>
<body>
    <header>
        <div class="fi home-link">
            <a id="homeLink" tabindex="1" href="../../websitesAndApps.html">(home) - Website, Projects & Apps</a>
        </div>
        
        <div class="fi page-title">
            <h1>timer-chromeExtension</h1>    
        </div>
        <div class="page-logo">
            This script uses the css file for chatgpt questions and step-txt            
        </div>
    </header>
    <main>       
        <!-- Part 1 Usage Summary source 1 -->
        <div class="part">
            <h3><a id="part01" tabindex="1" href="#" class="dropPart">Part 1 - Project Code </a></h3>
            <div class="steps-container hide">
                <div class="step-col">
                    <div tabindex="1" class="step-txt xxmd-txt-p">
                        <h4>00</h4>
                        <p class="r">
                            So many changes had to made to get this to work, see the project in <code>my_google-extensions</code>
                            directory in the home directory
                        </p>
                    </div>
                    <div class="img-2-container">
                        <div class="code-container asc">
                            <pre tabindex="1" class="copy-code">
                                </pre>
                            </div>
                        <div class="step-img">
                            <img src="imagesVideos">
                        </div>
                    </div>
                </div>
                <!-- 01-01 -->
                <div class="step-col">
                    <div tabindex="1" class="step-txt">
                        <h4>01</h4>
                        <p>
                            Make the <strong><code>manifest.json</code></strong>
                            file in a directory
                        </p>
                    </div>
                    <div class="img-2-container">
                        <div class="step-img">
                            <img class="xlg-enlarge" src="imagesVideos/01-01a.png">
                        </div>
                        <div class="step-img">
                            <img class="xlg-enlarge" src="imagesVideos/01-01b.png">
                        </div>
                    </div>
                </div>
                <!--01-02 -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>02</h4>
                        <p>
                            Replace "images/icon16.png", "images/icon48.png", and "images/icon128.png" with the path to your extension's icon files.
                            You can create icons of different sizes for better appearance
                            <span class="m">Figure this out at the end</span>
                        </p>
                        <h5><strong><code>manifest.json</code></strong></h5>
                        <div class="code-container">
                            <pre tabindex="1" class="copy-code vs-code">
{
  "manifest_version": 2,
  "name": "Timer Extension",
  "version": "1.0",
  "description": "A simple timer extension",
  "permissions": ["activeTab"],
  "browser_action": {
    "default_icon": "icon.png",
    "default_popup": "popup.html"
  },
  "icons": {
    "48": "icon.png"
  }
}</pre>
                        </div>
                        
                    </div>
                    <div class="step-img">
                        <img src="imagesVideos/01-02.png">
                    </div>
                </div>
                <!-- 01-03 -->
                <!-- popup.html -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>03</h4>
                        <p>
                            Create the html file 
                        </p>
                        <h5><strong><code>popup.html</code></strong></h5>
                        <div class="code-container">
                                <pre tabindex="1" class="copy-code vs-code">
&lt;!DOCTYPE html>
&lt;html>

&lt;head>
  &lt;title>Timer Extension&lt;/title>
  &lt;script src="popup.js" defer>&lt;/script>
&lt;/head>

&lt;body>
  &lt;h1 id="timer">00:00:00&lt;/h1>
  &lt;button id="startButton">Start&lt;/button>
  &lt;button id="stopButton">Stop&lt;/button>
&lt;/body>

&lt;/html></pre>
                            </div>
                    </div>
                    <div class="step-img">
                        <img src="imagesVideos/01-03.png">
                    </div>
                </div>
                <!-- 01-04 -->
                <!-- popup.js -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>04</h4>
                        <p>
                            Create the js script
                        </p>
                        <h6><strong><code>popup.js</code></strong></h6>
                        <div class="code-container">
                            <pre tabindex="1" class="copy-code vs-code">
let timer;
let seconds = 0;

function updateTimer() {
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const remainingSeconds = seconds % 60;
  document.getElementById("timer").innerText = `${hours}:${minutes}:${remainingSeconds}`;
}

document.getElementById("startButton").addEventListener("click", function () {
  timer = setInterval(function () {
    seconds++;
    updateTimer();
  }, 1000);
});

document.getElementById("stopButton").addEventListener("click", function () {
  clearInterval(timer);
});
                            </pre>
                        </div>
                        
                    </div>
                    <div class="step-img">
                        <img src="imagesVideos/01-04.png">
                    </div>
                </div>
                <!-- 01-05 -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>05</h4>
                        <p>
                            type,
                        </p>
                        <div class="code-container">
                            <pre tabindex="1" class="copy-code">
chrome://extensions/</pre>
                        </div>
                        <p>
                            in the chrome browser, and enable <q><code class="m">Developer mode</code></q> in the top right
                        </p>
                    </div>
                    <div class="step-img">
                        <img class="xlg-enlarge" src="imagesVideos/01-05.png">
                    </div>
                </div>
                <!-- 01-06 -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>06</h4>
                        <p>
                            Click <q><code class="m">Load unpacked</code></q> and select your extension folder
                        </p>
                    </div>
                    <div class="step-img">
                        <img src="imagesVideos/01-06.png">
                    </div>
                </div>
                <!-- 01-07 -->
                <div class="step-col">
                    <div tabindex="1" class="question step-txt">
                        <h4 class="">07</h4>
                        <p>
                            If you get this error, place an image with the name <strong><code>icon.png</code></strong>
                            in the same directory and see if if works
                        </p>
                    </div>
                    <div class="img-2-container">
                        <div class="step-img">
                            <img class="xlg-enlarge" src="imagesVideos/01-07a.png">
                        </div>
                        <div class="step-img">
                            <img class="xlg-enlarge" src="imagesVideos/01-07b.png">
                        </div>
                    </div>
                </div>
                <!-- 01-08 -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>08</h4>
                        <p>
                            Click retry or <q><code>Load unpacked</code></q> and the extension will show up on the screen,
                            go to the top right and click the extensions and select the Timer Extension.
                        </p>
                    </div>
                    <div class="step-img">
                        <img class="xlg-enlarge" src="imagesVideos/01-08.png">
                    </div>
                </div>
                <!-- 01-09 -->
                <div class="step">
                    <div tabindex="1" class="step-txt">
                        <h4>09</h4>
                        <p>
                            You now how the basics of a timer, (Right now it doesn't work but get it done!)
                        </p>
                    </div>
                    <div class="step-img">
                        <img class="xlg-enlarge" src="imagesVideos/01-09.png">
                    </div>
                </div>
            </div>
        </div>
    
        <!-- Step 2 - Chat Gpt Question-->
        <div class="part">
            <a id="" tabindex="1" href="#" class="dropPart"><h3>Part 2 - Chat Gpt Question</h3></a>
            <div class="steps-container show">
                <!-- 02-00 -->
                <div class="chatgpt-question-container step-txt">
                    <div tabindex="1" class="chatgpt-question step-txt">
                        <h4>00</h4>
                        <div class="ts-icon-container">
                            <img class="fi logo" src="imagesVideos/ts-icon.png" alt="">
                        </div>
                        <div class="chatgpt-question-txt">
                            <h5  class="copy-code the-chatgpt-question lg-txt"><strong>question:</strong>
                                Don't manually enter the code anymore!!, have python script scrape answer and place it into html.
                
                            </h5>
                        </div>
                    </div>
                    <div class="answer">
                        <div class="logo-icon-container">
                            <img class="fi logo" src="imagesVideos/logo-icon.png" alt="">
                        </div>
                        <div class="answer-txt">
                            <p class="r0">
                                Go back after scraping more, to write a script that scrapes the answer and creates the html for this,
                                NO MORE TYPING THIS
                            </p>
                        </div>
                    </div>
                </div>
                <!-- 02-01 -->
                <div class="chatgpt-question-container step-txt">
                    <div  tabindex="1" class="chatgpt-question step-txt">
                        <h4>01</h4>
                        <div class="ts-icon-container">
                            <img class="fi logo" src="imagesVideos/ts-icon.png" alt="">
                        </div>
                        <div class="chatgpt-question-txt">
                            <h5 tabindex="1" class="copy-code the-chatgpt-question lg-txt"><strong>question:</strong>
                            how do i make a chrome extension timer
                            </h5>
                        </div>
                    </div>
                    <div class="answer">
                        <div class="logo-icon-container">
                            <img class="fi logo" src="imagesVideos/logo-icon.png" alt="">
                        </div>
                        <div class="answer-txt">
                            <p>
                                Creating a Chrome extension timer involves a few steps. Here's a basic outline to help you get started:
                            </p>
                            <!-- 1. -->
                            <p>
                                1.<strong>Set Up Your Project:</strong>

                                    <ul>
                                        <li>Create a new folder for your extension.</li>
                                        <li>Inside the folder, create a file named manifest.json. This file defines the extension's properties.</li>
                                    </ul>
                            </p>
                            <!-- 2. -->
                            <p>
                                2. <strong>Edit manifest.json:</strong>
                                    <ul>
                                        <li>Open <strong><code>manifest.json</code></strong> </li>
                                        <li>Define the basic structure, including <strong><code>manifest_version</code></strong>, <strong><code>name</code></strong>,
                                            <strong><code>version</code></strong>, and <strong><code>description</code></strong>.
                                        </li>
                                        <li>Specify permissions, such as <strong>"<code>activeTab</code>"</strong> if your extension interacts with the current tab.</li>
                                    </ul>
                            </p>
                            <!-- Question -->
                            <p>
                                <a tabindex="1" href="#question2" class="question">**Question</a>,
                                <br>
                                <span class="r">How do i save <strong><code>manifest.json</code></strong> to the <strong>extension folder</strong>?
                                Where is the <strong>extension folder</strong></span>
                            </p>    
                            <h6>// manifest.json</h6>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
{
  "manifest_version": 2,
  "name": "Timer Extension",
  "version": "1.0",
  "description": "A simple timer extension",
  "permissions": ["activeTab"],
  "browser_action": {
    "default_icon": "icon.png",
    "default_popup": "popup.html"
  },
  "icons": {
    "48": "icon.png"
  }
}</pre>
                            </div>
                            <p>
                                Replace "images/icon16.png", "images/icon48.png", and "images/icon128.png" with the path to your extension's icon
                                files.
                                You can create icons of different sizes for better appearance.
                            </p>
                            <!-- 3. -->
                            <p>
                                3. <strong>Create HTML and JavaScript Files:</strong>
                                    <ul>
                                        <li>Create an HTML file (e.g., <strong><code>popup.html</code></strong>) for the popup interface.</li>
                                        <li>Create a JavaScript file (e.g., <strong><code>popup.js</code></strong>) to handle the timer logic.</li>
                                    </ul>
                            </p>
                            <h6>popup.html</h6>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
&lt;!DOCTYPE html>
&lt;html>

&lt;head>
  &lt;title>Timer Extension&lt;/title>
  &lt;script src="popup.js">&lt;/script>
&lt;/head>

&lt;body>
  &lt;h1 id="timer">00:00:00&lt;/h1>
  &lt;button id="startButton">Start&lt;/button>
  &lt;button id="stopButton">Stop&lt;/button>
&lt;/body>

&lt;/html></pre>
                            </div>
                            <h6>popup.js</h6>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
let timer;
let seconds = 0;

function updateTimer() {
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const remainingSeconds = seconds % 60;
  document.getElementById("timer").innerText = `${hours}:${minutes}:${remainingSeconds}`;
}

document.getElementById("startButton").addEventListener("click", function () {
  timer = setInterval(function () {
    seconds++;
    updateTimer();
  }, 1000);
});

document.getElementById("stopButton").addEventListener("click", function () {
  clearInterval(timer);
});</pre>
                            </div>
                            <!-- 4.-->
                            <p>
                                4. <strong>Load the Extension:</strong>
                                    <ul>
                                        <li>Open Chrome and go to chrome://extensions/.</li>
                                        <li>Enable "Developer mode" at the top.</li>
                                        <li>Click "Load unpacked" and select your extension folder.</li>
                                    </ul>
                            </p>
                            <!-- 5. -->
                            <p>
                                5. <strong>Test the Extension:</strong>
                                    <ul>
                                        <li>Click on the extension icon in the toolbar.</li>
                                        <li>The popup with the timer and buttons should appear.</li>
                                    </ul>
                            </p>
                            <p>
                                This is a basic example, and you can customize it further based on your requirements.

                            </p>                
                        </div>
                    </div>
                </div>
                <!-- 02-02 -->
                <div class="chatgpt-question-container step-txt">
                    <div tabindex="1" class="chatgpt-question step-txt">
                        <h4>02</h4>
                        <div class="ts-icon-container">
                            <img class="fi logo" src="imagesVideos/ts-icon.png" alt="">
                        </div>
                        <div class="chatgpt-question-txt">
                            <h5 tabindex="1" class="copy-code the-chatgpt-question lg-txt"><strong>question:</strong>
                                make html javascript timer to enter time and have count down after time has been put in and a start button has been
                                pressed

                            </h5>
                        </div>
                    </div>
                    <div class="answer">
                        <div class="logo-icon-container">
                            <img class="fi logo" src="imagesVideos/logo-icon.png" alt="">
                        </div>
                        <div class="answer-txt ">
                            <p class="r0">
                                Certainly! Below is a simple example of an HTML and JavaScript code for a countdown timer where the user can enter the
                                desired time and start the countdown by pressing a button:
        
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
&lt;h2>Countdown Timer&lt;/h2>

&lt;label for="timeInput">Enter time (in seconds): &lt;/label>
&lt;input type="number" id="timeInput" min="1" placeholder="Enter time">

&lt;button onclick="startCountdown()">Start Countdown&lt;/button>

&lt;p id="timerDisplay">&lt;/p>

                                </pre>
                            </div>                                
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
let countdown;

function startCountdown() {
    const timeInput = document.getElementById("timeInput").value;

    if (isNaN(timeInput) || timeInput &lt;= 0) {
        alert("Please enter a valid positive number for the time.");
        return;
    }

    const timerDisplay = document.getElementById("timerDisplay");
    let seconds = parseInt(timeInput, 10);

    countdown = setInterval(function () {
        timerDisplay.textContent = formatTime(seconds);

        if (seconds &lt;= 0) {
            clearInterval(countdown);
            timerDisplay.textContent = "Countdown completed!";
        } else {
            seconds--;
        }
    }, 1000);
}

function formatTime(seconds) {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;

    return `${minutes}:${remainingSeconds &lt; 10 ? '0' : ''}${remainingSeconds}`;
}
                                </pre>
                            </div>
                            
                        </div>
                    </div>
                </div>
                <!-- 02-03 -->
                <div class="chatgpt-question-container step-txt">
                    <div tabindex="1" class="chatgpt-question step-txt">
                        <h4>03</h4>
                        <div class="ts-icon-container">
                            <img class="fi logo" src="imagesVideos/ts-icon.png" alt="">
                        </div>
                        <div class="chatgpt-question-txt">
                            <h5 tabindex="1" class="copy-code the-chatgpt-question lg-txt"><strong>question:</strong>
                                make chrome extension open in new tab
                            </h5>
                        </div>
                    </div>
                    <div class="answer">
                        <div class="logo-icon-container">
                            <img class="fi logo" src="imagesVideos/logo-icon.png" alt="">
                        </div>
                        <div class="answer-txt ">
                            <p class="r0">
                                To make a Chrome extension open in a new tab, you need to modify the manifest file and specify the "tabs" permission.
                                Here are the steps:
                            </p>
                            <p>
                                1. <strong>Create a manifest file:</strong>
                                Create a file named <code>'manifest.json'</code> in the root directory of your extension.
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
{
  "manifest_version": 2,
  "name": "Your Extension Name",
  "version": "1.0",
  "description": "Description of your extension",
  "permissions": [
    "tabs"
  ],
  "browser_action": {
    "default_icon": "icon.png",
    "default_popup": "popup.html"
  },
  "icons": {
    "48": "icon.png"
  }
}</pre>
                            </div>                                
                            <p>
                                2. <strong>Create HTML files:</strong>
                                Create an HTML file for your popup (e.g., popup.html) and any other necessary HTML files.
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
&lt;!DOCTYPE html>
&lt;html>

&lt;head>
    &lt;title>Your Extension Popup&lt;/title>
&lt;/head>

&lt;body>
    &lt;h1>Hello, this is your extension!&lt;/h1>
&lt;/body>

&lt;/html>

                                </pre>
                            </div>
                            <p>
                                3. <strong>Load popup in a new tab:</strong>
                                In your background script or popup script, you can use the chrome.tabs.create method to open a new tab.
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
// background.js or popup.js
chrome.tabs.create({url: "popup.html", active: true});</pre>
                            </div>
                            <p>
                                4.  <strong>Load the extension:</strong>
                                Load the extension:
                                Load your extension in Chrome by navigating to <a class="copy-code" tabindex="1" target="_blank" href="chrome://extensions/">chrome://extensions/</a>, enabling "Developer mode," and clicking "Load
                                unpacked." Select the directory containing your extension files.
                            </p>
                            
                        </div>
                    </div>
                </div>
                <!-- 02-04 -->
                <div class="chatgpt-question-container step-txt">
                    <div tabindex="1" class="chatgpt-question step-txt">
                        <h4>04</h4>
                        <div class="ts-icon-container">
                            <img class="fi logo" src="imagesVideos/ts-icon.png" alt="">
                        </div>
                        <div class="chatgpt-question-txt">
                            <h5 tabindex="1" class="copy-code the-chatgpt-question lg-txt"><strong>question:</strong>
                                keep chrome extensions visible and see changes from css and js script alterations
                            </h5>
                        </div>
                    </div>
                    <div class="answer">
                        <div class="logo-icon-container">
                            <img class="fi logo" src="imagesVideos/logo-icon.png" alt="">
                        </div>
                        <div class="answer-txt ">
                            <p class="r0">
                                If you want to keep Chrome extensions visible while making changes to CSS and JS scripts, you can use the following
                                steps:

                                
                            </p>
                            <!-- 1. -->
                            <p tabindex="1" >
                                1. <strong> Open Developer Tools:</strong>
                                Right-click on the page and select "Inspect" or press <strong>Ctrl+Shift+I</strong> (Windows/Linux) or <strong>Cmd+Opt+I
                                    (Mac)</strong> to open Chrome
                                Developer Tools.
                            </p>
                            <!-- 2. -->
                            <p tabindex="1" >
                                2. <strong>Undock Developer Tools:</strong>                            
                                Click on the three vertical dots in the top-right corner of the Developer Tools panel.
                                Select "Undock into separate window" to open Developer Tools in a separate window.
                            </p>
                            <!-- 3. -->
                            <p tabindex="1" >
                                3. <strong>Dock Extensions Sidebar:</strong>
                                In the undocked Developer Tools window, you can resize the window as needed.
                                On the left side of the window, you'll see the "Sources" tab. Right-click on it and choose "Show Extensions sidebar."
                            </p>
                            <!-- 4. -->
                            <p tabindex="1" >
                                4. <strong>Enable Device Mode:</strong>
                                
                                Click on the "Toggle Device Toolbar" icon or press Ctrl+Shift+M (Windows/Linux) or Cmd+Opt+M (Mac) to enable Device
                                Mode.
                                This helps you simulate different devices and view responsive design changes.
                            </p>
                            <!-- 5. -->
                            <p tabindex="1" >
                                5. <strong>Work with Elements Panel:</strong>
                                In the "Elements" panel, you can inspect and modify HTML and CSS in real-time.
                                Make your changes and see them applied instantly.
                            </p>
                            <!-- 6. -->
                            <p tabindex="1" >
                                6. <strong>Console for JavaScript:</strong>
                                Switch to the "Console" tab to interact with JavaScript. You can execute scripts directly in the console.
                            </p>
                            <!-- 7. -->
                            <p tabindex="1" >
                                7. <strong>View Extensions in "chrome://extensions":</strong>
                                If you're making changes specifically to a Chrome extension, you might want to visit chrome://extensions in a separate
                                tab.
                                Here you can reload the extension or inspect background pages if necessary.
                                By following these steps, you can keep Chrome extensions visible while making changes to CSS and JS scripts, and see the
                                updates in real-time. Remember that some changes might require a page refresh or extension reload to take effect.
                            </p>
                            
                
                        </div>
                    </div>
                </div>
                
            </div>
        </div>
    </main>
</body>
</html>